# ===================================================================
# APLICACIÓN Y CONFIGURACIÓN DEL SERVIDOR
# ===================================================================
server.port=8080

# ===================================================================
# CONFIGURACIÓN DE LA BASE DE DATOS (H2 EN MEMORIA)
# ===================================================================
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.username=sa
spring.datasource.password=

# Habilitar la consola web de H2 para depuración
spring.h2.console.enabled=true
# La ruta para acceder a la consola será http://localhost:8080/h2-console
spring.h2.console.path=/h2-console

# ===================================================================
# CONFIGURACIÓN DE JPA/HIBERNATE
# ===================================================================
# Permite que Hibernate genere el DDL (CREATE, DROP) basado en las entidades.
# 'update' modifica el esquema si hay cambios, sin borrar datos.
# IMPORTANTE: Al usar ddl-auto, Spring Boot NO ejecutará schema.sql por defecto.
spring.jpa.hibernate.ddl-auto=update

# SOLUCIÓN: Esta propiedad retrasa la inicialización de datos (data.sql) hasta que
# la inicialización del esquema de Hibernate (ddl-auto) se haya completado.
spring.jpa.defer-datasource-initialization=true

# Para que data.sql se ejecute SIEMPRE, incluso si Hibernate maneja el schema.
spring.sql.init.mode=always

# Muestra las sentencias SQL generadas por Hibernate en la consola.
spring.jpa.show-sql=true

# Formatea las sentencias SQL para que sean más legibles.
spring.jpa.properties.hibernate.format_sql=true